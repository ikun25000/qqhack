name: main

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '**.txt'
      - 'renovate.json'
      - '.editorconfig'
      - '.gitignore'
      - '.github/**'
      - '.idea/**'
      - '!.github/workflows/**'

jobs:
  build:
    name: Build CI
    runs-on: ubuntu-24.04
    if: ${{ !startsWith(github.event.head_commit.message, '[skip ci]') }} && success() && github.ref == 'refs/heads/main' }}

    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: set up JDK 17
        uses: actions/setup-java@v4.7.1
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle
        run: |
          echo 'org.gradle.parallel=true' >> gradle.properties
          echo 'org.gradle.vfs.watch=true' >> gradle.properties
          sed -i 's/org.gradle.configuration-cache=true//g' gradle.properties
          echo 'buildCache { local { removeUnusedEntriesAfterDays = 1 } }' >> settings.gradle.kts
          echo ${{ secrets.SIGN_KEYSTORE_BASE64 }} | base64 -d > keystore.jks
          chmod +x ./gradlew
          ./gradlew :app:assembleRelease --build-cache --parallel --daemon
          echo "APK_FILE=$(find app/build/outputs/apk/app/release -name '*.apk')" >> $GITHUB_ENV
        env:
          KEYSTORE_PATH: "../keystore.jks"
          KEYSTORE_PASSWORD: ${{ secrets.SIGN_KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.SIGN_ALIAS }}
          KEY_PASSWORD: ${{ secrets.SIGN_KEY_PASSWORD }}

      - name: Show Artifacts SHA256
        run: |
          echo "### Build Success :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "|ABI|SHA256|" >> $GITHUB_STEP_SUMMARY
          echo "|:--------:|:----------|" >> $GITHUB_STEP_SUMMARY
          app=($(sha256sum ${{ env.APK_FILE }}))
          echo "|app|$app" >> $GITHUB_STEP_SUMMARY

      - name: Upload Artifacts(arm64)
        uses: actions/upload-artifact@v4
        with:
          path: ${{ env.APK_FILE }}
          name: TXHook-release-${{ github.event.head_commit.id }}-app

      - name: Send commit to telegram
        if: success() && github.repository == 'callng/QQHook' && github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        env:
          CHANNEL_ID: ${{ secrets.TELEGRAM_TO }}
          BOT_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          APK_FILE: ${{ env.APK_FILE }}
          COMMIT_MESSAGE: |+
            New push to GitHub\!
            ```
            ${{ github.event.head_commit.message }}
            ```
            by `${{ github.event.head_commit.author.name }}`
            See commit detail [here](${{ github.event.head_commit.url }})
            Snapshot apk is attached
        run: |
          ESCAPED=`python3 -c 'import json,os,urllib.parse; print(urllib.parse.quote(json.dumps(os.environ["COMMIT_MESSAGE"])))'`
          curl -v "https://api.telegram.org/bot${BOT_TOKEN}/sendMediaGroup?chat_id=${CHANNEL_ID}&media=%5B%7B%22type%22%3A%22document%22%2C%20%22media%22%3A%22attach%3A%2F%2FapkFile%22%2C%22parse_mode%22%3A%22MarkdownV2%22%2C%22caption%22%3A${ESCAPED}%7D%5D" \
            -F apkFile=@"$APK_FILE"
